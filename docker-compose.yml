version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: evgenich-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: evgenich_analytics
      POSTGRES_USER: evgenich
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strong_password_123}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - bot-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evgenich -d evgenich_analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  analytics-bot:
    build: .
    container_name: evgenich-analytics-bot
    restart: unless-stopped
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - BOT_TOKEN=${BOT_TOKEN}
      - ADMIN_IDS=${ADMIN_IDS}
      - GOOGLE_CREDENTIALS_FILE=/app/credentials.json
      - GOOGLE_CREDENTIALS_JSON=${GOOGLE_CREDENTIALS_JSON}
      - SPREADSHEET_ID=${SPREADSHEET_ID}
      - METRIKA_OAUTH_TOKEN=${METRIKA_OAUTH_TOKEN}
      - METRIKA_COUNTER_ID=${METRIKA_COUNTER_ID}
      - RESTOPLACE_API_KEY=${RESTOPLACE_API_KEY}
      - REPORT_CHAT_ID=${REPORT_CHAT_ID}
      - DATABASE_URL=postgresql://evgenich:${POSTGRES_PASSWORD:-strong_password_123}@postgres:5432/evgenich_analytics
      - USE_POSTGRES=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - RATE_LIMIT_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-10}
    volumes:
      - ./credentials.json:/app/credentials.json:ro
      - ./charts:/app/charts
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - bot-network
    ports:
      - "8000:8000"

  redis:
    image: redis:7-alpine
    container_name: evgenich-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - bot-network
    ports:
      - "6379:6379"

volumes:
  redis-data:
  postgres-data:

networks:
  bot-network:
    driver: bridge
