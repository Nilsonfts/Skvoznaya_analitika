"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ RestoPlace –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import asyncio
import logging
from datetime import datetime
from services.restoplace import RestoPlaceService
from services.reserves_updater import ReservesUpdateService

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_restoplace_service():
    """–¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–∞ RestoPlace"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ RestoPlace...")
    
    try:
        async with RestoPlaceService() as rp_service:
            # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–æ–≤ (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 1 —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Ç–µ—Å—Ç–∞)
            print("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–æ–≤ –∏–∑ API...")
            
            reserves = await rp_service.get_reserves(page=1, page_size=10)
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ä–µ–∑–µ—Ä–≤–æ–≤: {len(reserves.get('data', []))}")
            
            if reserves.get('data'):
                # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                formatted = rp_service.format_reserve_data(reserves['data'][0])
                print(f"‚úÖ –ü—Ä–∏–º–µ—Ä –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–∞: {formatted.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')}")
                
                # –¢–µ—Å—Ç –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –≥–æ—Å—Ç–µ–π
                guests = rp_service.aggregate_guests_data(reserves['data'])
                print(f"‚úÖ –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–æ –≥–æ—Å—Ç–µ–π: {len(guests)}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ RestoPlace: {e}")

async def test_reserves_updater():
    """–¢–µ—Å—Ç —Å–µ—Ä–≤–∏—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–æ–≤...")
    
    try:
        updater = ReservesUpdateService()
        
        # –¢–µ—Å—Ç —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–Ω–µ–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞
        print("üîÑ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
        stats = await updater.update_reserves_data(days_back=7)
        
        print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
        for key, value in stats.items():
            print(f"  ‚Ä¢ {key}: {value}")
        
        # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–≤–æ–¥–∫–∏
        summary = updater.get_update_summary(stats)
        print(f"\nüìã –°–≤–æ–¥–∫–∞:\n{summary}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–æ–≤: {e}")

async def test_integration():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    print("\nüß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        from config import RESTOPLACE_API_KEY, SPREADSHEET_ID
        
        if not RESTOPLACE_API_KEY:
            print("‚ö†Ô∏è  RESTOPLACE_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return
        
        if not SPREADSHEET_ID:
            print("‚ö†Ô∏è  SPREADSHEET_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return
        
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞")
        
        # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
        print("üîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ RestoPlace API...")
        async with RestoPlaceService() as rp_service:
            test_data = await rp_service.get_reserves(page=1, page_size=1)
            
            if test_data:
                print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ RestoPlace API —É—Å–ø–µ—à–Ω–æ")
            else:
                print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ—Ç API")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–º —Ç–µ—Å—Ç–µ: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ RestoPlace\n")
    
    # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    await test_restoplace_service()
    await test_reserves_updater()
    await test_integration()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(main())
